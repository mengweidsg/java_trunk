<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>easy.satellite</artifactId>
		<groupId>com.esunny.app</groupId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>com.esunny.app</groupId>
	<artifactId>satellite-deploy</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>satellite-web-deploy</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!-- workaround for the empty jar error -->
		<resources>
			<resource>
				<directory>framework</directory>
			</resource>
		</resources>
	</build>
	<profiles>
		<!-- Release profile will just copy war and package resource files to target/release, 
			W/O auto-conf. -->
		<!-- AppOPs will run auto-conf before deploying to production server -->
		<!-- By default the "dev" profile will be activated -->
		<!-- Use "mvn install -Denv=release" to activate release profile -->
		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>env</name>
					<value>release</value>
				</property>
			</activation>
			<properties>
				<release_directory>${project.build.directory}/release/target</release_directory>
				<binconf_directory>${project.basedir}/binconf</binconf_directory>
			</properties>

			<build>
				<plugins>
					<!-- Copy war artifact -->
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.1</version>
						<executions>
							<execution>
								<id>copy-war</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.esunny.app</groupId>
											<artifactId>satellite-war</artifactId>
											<version>${pom.version}</version>
											<type>war</type>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${release_directory}</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-deploy-package</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<!-- Configured Artifacts -->
										<mkdir dir="${binconf_directory}" />
										<copy todir="${binconf_directory}" encoding="${file_encoding}" outputencoding="${file_encoding}">
											<fileset dir="${project.basedir}/framework">
											</fileset>
										</copy>
										<chmod dir="${binconf_directory}/bin" perm="755" includes="**" />
										<jar destfile="${release_directory}/web-deploy.jar">
											<!-- <zipfileset dir="${binconf_directory}/conf/META-INF" prefix="META-INF"/> -->
											<zipfileset dir="${binconf_directory}">
												<include name="htdocs/**" />
												<include name="conf/**" />
												<!-- <exclude name="conf/META-INF/**"/> -->
											</zipfileset>
											<zipfileset dir="${binconf_directory}" filemode="755">
												<include name="bin/**" />
											</zipfileset>
										</jar>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Dev profile will configure all files and copy them to target/dev, 
			for testing purpose -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name>
					<value>!release</value>
				</property>
			</activation>
			<properties>
				<release_directory>${project.build.directory}</release_directory>
				<binconf_directory>${project.build.directory}/web-deploy</binconf_directory>
			</properties>

			<build>
				<plugins>
					<!-- ant filter start -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-deploy-package</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<!-- Configured Artifacts -->
										<mkdir dir="${binconf_directory}" />
										<copy todir="${binconf_directory}" encoding="${file_encoding}"
											outputencoding="${file_encoding}">
											<fileset dir="${project.basedir}/framework">
											</fileset>
										</copy>
										<chmod dir="${binconf_directory}/bin" perm="755"
											includes="**" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- ant filter end -->
					<!-- Copy war artifact -->
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.1</version>
						<executions>
							<execution>
								<id>copy-war</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.esunny.app</groupId>
											<artifactId>satellite-war</artifactId>
											<version>${pom.version}</version>
											<type>war</type>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${release_directory}</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
